{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\Project BWA\\\\FRONTEND\\\\frontpage\\\\src\\\\components\\\\Modal\\\\index.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from \"react\";\nimport propTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nexport default function Modal(props) {\n  _s();\n  var _props$in;\n  var _useState = useState(function () {\n      return false;\n    }),\n    Ready = _useState[0],\n    setReady = _useState[1];\n  var _useState2 = useState(function () {\n      return false;\n    }),\n    Display = _useState2[0],\n    setDisplay = _useState2[1];\n  var _useState3 = useState(function () {\n      return true;\n    }),\n    Allow = _useState3[0],\n    setAllow = _useState3[1];\n  var ModalRef = useRef(null);\n  var idModal = \"modal\";\n  function toggleAllow() {\n    setAllow(!Allow);\n  }\n  function toggle() {\n    if (props.toggleModal) props.toggleModal();else setDisplay(!Display);\n  }\n  function handleClickOutside(event) {\n    var _ModalRef$current, _ModalRef$current$con;\n    if ((ModalRef === null || ModalRef === void 0 ? void 0 : ModalRef.current) && !(ModalRef === null || ModalRef === void 0 ? void 0 : (_ModalRef$current = ModalRef.current) === null || _ModalRef$current === void 0 ? void 0 : (_ModalRef$current$con = _ModalRef$current.contains) === null || _ModalRef$current$con === void 0 ? void 0 : _ModalRef$current$con.call(_ModalRef$current, event.target)) && Allow) toggle();\n  }\n  useEffect(function () {\n    var rootContainer = document.createElement(\"div\");\n    rootContainer.setAttribute(\"id\", idModal);\n    setReady(true);\n    if (!document.getElementById(idModal)) document.body.appendChild(rootContainer);\n  }, []);\n  useEffect(function () {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return function () {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n  useEffect(function () {\n    if (Display || props[\"in\"]) {\n      document.querySelector(\"body\").classList.add(\"modal-open\");\n    }\n    return function () {\n      document.querySelector(\"body\").classList.remove(\"modal-open\");\n    };\n  }, [Display, props[\"in\"]]);\n  if (!Ready) return null;\n  return __jsx(React.Fragment, null, props.children(toggle), document && document.getElementById(idModal) && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, createPortal(__jsx(CSSTransition, {\n    \"in\": (_props$in = props[\"in\"]) !== null && _props$in !== void 0 ? _props$in : Display,\n    timeout: 500,\n    onExit: toggleAllow,\n    onExited: toggleAllow,\n    classNames: \"overlay\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"overlay fixed inset-0 h-screen z-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"bg-black opacity-25 inset-0 absolute z-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"absolute z-20 flex items-center justify-center inset-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: props.modalStyle,\n    ref: ModalRef,\n    className: \"bg-white shadow-2xl w-full md:w-auto max-h-5xl md:max-w-5xl \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"modal-close\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  })), props.content(toggle))))), document.getElementById(idModal))));\n}\n_s(Modal, \"Bw8+aKTV9bzs+grmBuXGeQHMDL8=\");\n_c = Modal;\nModal.defaultProps = {};\nModal.propTypes = {\n  \"in\": propTypes.bool,\n  toggleModal: propTypes.func,\n  content: propTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","propTypes","createPortal","CSSTransition","Modal","props","Ready","setReady","Display","setDisplay","Allow","setAllow","ModalRef","idModal","toggleAllow","toggle","toggleModal","handleClickOutside","event","current","contains","target","rootContainer","document","createElement","setAttribute","getElementById","body","appendChild","addEventListener","removeEventListener","querySelector","classList","add","remove","children","modalStyle","content","defaultProps","bool","func","isRequired"],"sources":["E:/Project/Project BWA/FRONTEND/frontpage/src/components/Modal/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport propTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\n\nimport { CSSTransition } from \"react-transition-group\";\n\nexport default function Modal(props) {\n  const [Ready, setReady] = useState(() => false);\n  const [Display, setDisplay] = useState(() => false);\n  const [Allow, setAllow] = useState(() => true);\n\n  const ModalRef = useRef(null);\n  const idModal = \"modal\";\n\n  function toggleAllow() {\n    setAllow(!Allow);\n  }\n\n  function toggle() {\n    if (props.toggleModal) props.toggleModal();\n    else setDisplay(!Display);\n  }\n\n  function handleClickOutside(event) {\n    if (\n      ModalRef?.current &&\n      !ModalRef?.current?.contains?.(event.target) &&\n      Allow\n    )\n      toggle();\n  }\n\n  useEffect(() => {\n    const rootContainer = document.createElement(\"div\");\n    rootContainer.setAttribute(\"id\", idModal);\n    setReady(true);\n\n    if (!document.getElementById(idModal))\n      document.body.appendChild(rootContainer);\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  useEffect(() => {\n    if (Display || props.in) {\n      document.querySelector(\"body\").classList.add(\"modal-open\");\n    }\n    return () => {\n      document.querySelector(\"body\").classList.remove(\"modal-open\");\n    };\n  }, [Display, props.in]);\n\n  if (!Ready) return null;\n\n  return (\n    <>\n      {props.children(toggle)}\n      {document && document.getElementById(idModal) && (\n        <div>\n          {createPortal(\n            <CSSTransition\n              in={props.in ?? Display}\n              timeout={500}\n              onExit={toggleAllow}\n              onExited={toggleAllow}\n              classNames=\"overlay\"\n              unmountOnExit\n            >\n              <div className=\"overlay fixed inset-0 h-screen z-50\">\n                <div className=\"bg-black opacity-25 inset-0 absolute z-10\"></div>\n                <div className=\"absolute z-20 flex items-center justify-center inset-0\">\n                  <div\n                    style={props.modalStyle}\n                    ref={ModalRef}\n                    className=\"bg-white shadow-2xl w-full md:w-auto max-h-5xl md:max-w-5xl \"\n                  >\n                    <div className=\"relative\">\n                      <span className=\"modal-close\" onClick={toggle}></span>\n                    </div>\n\n                    {props.content(toggle)}\n                  </div>\n                </div>\n              </div>\n            </CSSTransition>,\n            document.getElementById(idModal)\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nModal.defaultProps = {};\nModal.propTypes = {\n  in: propTypes.bool,\n  toggleModal: propTypes.func,\n  content: propTypes.func.isRequired,\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,YAAY,QAAQ,WAAW;AAExC,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,eAAe,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EAAA;EACnC,gBAA0BP,QAAQ,CAAC;MAAA,OAAM,KAAK;IAAA,EAAC;IAAxCQ,KAAK;IAAEC,QAAQ;EACtB,iBAA8BT,QAAQ,CAAC;MAAA,OAAM,KAAK;IAAA,EAAC;IAA5CU,OAAO;IAAEC,UAAU;EAC1B,iBAA0BX,QAAQ,CAAC;MAAA,OAAM,IAAI;IAAA,EAAC;IAAvCY,KAAK;IAAEC,QAAQ;EAEtB,IAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAMa,OAAO,GAAG,OAAO;EAEvB,SAASC,WAAW,GAAG;IACrBH,QAAQ,CAAC,CAACD,KAAK,CAAC;EAClB;EAEA,SAASK,MAAM,GAAG;IAChB,IAAIV,KAAK,CAACW,WAAW,EAAEX,KAAK,CAACW,WAAW,EAAE,CAAC,KACtCP,UAAU,CAAC,CAACD,OAAO,CAAC;EAC3B;EAEA,SAASS,kBAAkB,CAACC,KAAK,EAAE;IAAA;IACjC,IACE,CAAAN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEO,OAAO,KACjB,EAACP,QAAQ,aAARA,QAAQ,4CAARA,QAAQ,CAAEO,OAAO,+EAAjB,kBAAmBC,QAAQ,0DAA3B,8CAA8BF,KAAK,CAACG,MAAM,CAAC,KAC5CX,KAAK,EAELK,MAAM,EAAE;EACZ;EAEAhB,SAAS,CAAC,YAAM;IACd,IAAMuB,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACnDF,aAAa,CAACG,YAAY,CAAC,IAAI,EAAEZ,OAAO,CAAC;IACzCN,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI,CAACgB,QAAQ,CAACG,cAAc,CAACb,OAAO,CAAC,EACnCU,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,aAAa,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,YAAM;IACdwB,QAAQ,CAACM,gBAAgB,CAAC,WAAW,EAAEZ,kBAAkB,CAAC;IAC1D,OAAO,YAAM;MACXM,QAAQ,CAACO,mBAAmB,CAAC,WAAW,EAAEb,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,CAAC;EAEFlB,SAAS,CAAC,YAAM;IACd,IAAIS,OAAO,IAAIH,KAAK,MAAG,EAAE;MACvBkB,QAAQ,CAACQ,aAAa,CAAC,MAAM,CAAC,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;IAC5D;IACA,OAAO,YAAM;MACXV,QAAQ,CAACQ,aAAa,CAAC,MAAM,CAAC,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAAC1B,OAAO,EAAEH,KAAK,MAAG,CAAC,CAAC;EAEvB,IAAI,CAACC,KAAK,EAAE,OAAO,IAAI;EAEvB,OACE,4BACGD,KAAK,CAAC8B,QAAQ,CAACpB,MAAM,CAAC,EACtBQ,QAAQ,IAAIA,QAAQ,CAACG,cAAc,CAACb,OAAO,CAAC,IAC3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGX,YAAY,CACX,MAAC,aAAa;IACZ,mBAAIG,KAAK,MAAG,iDAAIG,OAAQ;IACxB,OAAO,EAAE,GAAI;IACb,MAAM,EAAEM,WAAY;IACpB,QAAQ,EAAEA,WAAY;IACtB,UAAU,EAAC,SAAS;IACpB,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEb;IAAK,SAAS,EAAC,qCAAqC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClD;IAAK,SAAS,EAAC,2CAA2C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAO,EACjE;IAAK,SAAS,EAAC,wDAAwD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrE;IACE,KAAK,EAAET,KAAK,CAAC+B,UAAW;IACxB,GAAG,EAAExB,QAAS;IACd,SAAS,EAAC,8DAA8D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAExE;IAAK,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACvB;IAAM,SAAS,EAAC,aAAa;IAAC,OAAO,EAAEG,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAQ,CAClD,EAELV,KAAK,CAACgC,OAAO,CAACtB,MAAM,CAAC,CAClB,CACF,CACF,CACQ,EAChBQ,QAAQ,CAACG,cAAc,CAACb,OAAO,CAAC,CACjC,CAEJ,CACA;AAEP;AAAC,GA1FuBT,KAAK;AAAA,KAALA,KAAK;AA4F7BA,KAAK,CAACkC,YAAY,GAAG,CAAC,CAAC;AACvBlC,KAAK,CAACH,SAAS,GAAG;EAChB,MAAIA,SAAS,CAACsC,IAAI;EAClBvB,WAAW,EAAEf,SAAS,CAACuC,IAAI;EAC3BH,OAAO,EAAEpC,SAAS,CAACuC,IAAI,CAACC;AAC1B,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}